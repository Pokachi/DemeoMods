name: Build DemeoMods

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: DemeoMods.sln                      # Replace with your solution name, i.e. MyWpfApp.sln.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Build DemeoMods
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: DifficultyMod.dll
        path: DifficultyMod\bin\Release\DifficultyMod.dll

    - name: Create a Release
      uses: actions/create-release@v1.1.4
      id: create_release
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: v0.2.${{ github.run_number }}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Build v0.2.${{ github.run_number }}
        #Commit message as description
        body: ${{ github.event.head_commit.message }} 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: DifficultyMod\bin\Release\DifficultyMod.dll
        asset_name: DifficultyMod.dll
        asset_content_type: application/dll
